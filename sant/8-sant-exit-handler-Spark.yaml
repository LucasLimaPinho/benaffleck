# An exit handler is a template reference that executes at the end of the workflow
# irrespective of the success, failure, or error of the primary workflow. To specify
# an exit handler, reference the name of a template in 'spec.onExit'.
# Some common use cases of exit handlers are:
# - sending notifications of workflow status (e.g. e-mail/slack)
# - posting the pass/fail status to a webhook result (e.g. github build result)
# - cleaning up workflow artifacts
# - resubmitting or submitting another workflow
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: exit-handlers-
  namespace: argo
spec:
  entrypoint: intentional-fail

  templates:
  - name: intentional-fail
    steps: 
      - - name: fail
          template: fail 
          continueOn:
            failed: true
      - - name: success 
          template: success
      - - name: check-status-workflow
          template: check-status
          arguments:
            parameters:
            - name: exitcode
              value: "{{steps.fail.outputs.parameters.exitcode}}"
        
  - name: fail
    outputs:
      parameters:
      - name: exitcode
        valueFrom:
          path: /tmp/exitcode.txt 
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo intentional failure; echo 0 > /tmp/exitcode.txt; cat /tmp/exitcode.txt; exit 0"]
  
  - name: success
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo Success!; exit 0"]

  - name: check-status
    inputs:
      parameters:
      - name: exitcode
    container:
      image: alpine:latest
      command: [sh, -c]
      env:
        - name: EXIT_CODE
          value: "{{inputs.parameters.exitcode}}"
      args: ["echo Aleluia; exit $EXIT_CODE"]